Index: src/crypto/oaes_lib.c
--- src/crypto/oaes_lib.c.orig
+++ src/crypto/oaes_lib.c
@@ -462,10 +462,10 @@ OAES_RET oaes_sprintf(
 	
 	for( _i = 0; _i < data_len; _i++ )
 	{
-		sprintf( _temp, "%02x ", data[_i] );
-		strcat( buf, _temp );
+		snprintf( _temp, sizeof(_temp), "%02x ", data[_i] );
+		strlcat( buf, _temp, _buf_len_in );
 		if( _i && 0 == ( _i + 1 ) % OAES_BLOCK_SIZE )
-			strcat( buf, "\n" );
+			strlcat( buf, "\n", _buf_len_in );
 	}
 	
 	return OAES_RET_SUCCESS;
@@ -482,7 +482,7 @@ static void oaes_get_seed( char buf[RANDSIZ + 1] )
 	ftime (&timer);
 	gmTimer = gmtime( &timer.time );
 	_test = (char *) calloc( sizeof( char ), timer.millitm );
-	sprintf( buf, "%04d%02d%02d%02d%02d%02d%03d%p%d",
+	snprintf( buf, sizeof(buf), "%04d%02d%02d%02d%02d%02d%03d%p%d",
 		gmTimer->tm_year + 1900, gmTimer->tm_mon + 1, gmTimer->tm_mday,
 		gmTimer->tm_hour, gmTimer->tm_min, gmTimer->tm_sec, timer.millitm,
 		_test + timer.millitm, GETPID() );
@@ -494,7 +494,7 @@ static void oaes_get_seed( char buf[RANDSIZ + 1] )
 	gettimeofday(&timer, NULL);
 	gmTimer = gmtime( &timer.tv_sec );
 	_test = (char *) calloc( sizeof( char ), timer.tv_usec/1000 );
-	sprintf( buf, "%04d%02d%02d%02d%02d%02d%03d%p%d",
+	snprintf( buf, sizeof(buf), "%04d%02d%02d%02d%02d%02d%03d%p%d",
 		gmTimer->tm_year + 1900, gmTimer->tm_mon + 1, gmTimer->tm_mday,
 		gmTimer->tm_hour, gmTimer->tm_min, gmTimer->tm_sec, timer.tv_usec/1000,
 		_test + timer.tv_usec/1000, GETPID() );
