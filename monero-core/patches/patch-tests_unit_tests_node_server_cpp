Index: tests/unit_tests/node_server.cpp
--- tests/unit_tests/node_server.cpp.orig
+++ tests/unit_tests/node_server.cpp
@@ -266,6 +266,7 @@ TEST(ban, ignores_port)
   ASSERT_FALSE(is_blocked(server,MAKE_IPV4_ADDRESS_PORT(1,2,3,4,6)));
 }
 
+/* We may not sudo ifconfig ... as demanded below on *BSD.
 TEST(node_server, bind_same_p2p_port)
 {
   struct test_data_t
@@ -294,6 +295,7 @@ TEST(node_server, bind_same_p2p_port)
     const char *argv[2] = {nullptr, nullptr};
     boost::program_options::variables_map vm;
     boost::program_options::store(boost::program_options::parse_command_line(1, argv, desc_options), vm);
+*/
 
     /*
     Reason for choosing '127.0.0.2' as the IP:
@@ -309,6 +311,7 @@ TEST(node_server, bind_same_p2p_port)
     For Mac OSX, set the following alias, before running the test, or else it will fail:
     sudo ifconfig lo0 alias 127.0.0.2
     */
+/*
     vm.find(nodetool::arg_p2p_bind_ip.name)->second   = boost::program_options::variable_value(std::string("127.0.0.2"), false);
     vm.find(nodetool::arg_p2p_bind_port.name)->second = boost::program_options::variable_value(std::string(port), false);
 
@@ -326,6 +329,7 @@ TEST(node_server, bind_same_p2p_port)
   EXPECT_FALSE(init(new_node(), port));
   EXPECT_TRUE(init(new_node(), port_another));
 }
+*/
 
 TEST(cryptonote_protocol_handler, race_condition)
 {
